{"version":3,"sources":["pages/Game.js","utils/styled-ui.js","pages/Loaderboard.js","pages/Profile.js","utils/defaults.js","utils/storage.js","App.js","index.js"],"names":["Game","props","Wrapper","styled","div","Card","TableHead","MuiTableHead","Leaderboard","scores","sort","a","b","score","TableContainer","component","Paper","Table","TableRow","length","TableCell","align","TableBody","map","s","key","userId","date","Profile","user","login","logout","useState","userName","setUsername","name","Button","variant","color","onClick","Input","value","onChange","e","target","placeholder","dummyScores","dummyUsers","id","setItem","localStorage","JSON","stringify","getItem","parse","setAuthId","authId","getUser","users","getScoresByUser","filter","_","authReducer","action","type","storage","scoresReducer","push","Tab","BottomNavigationAction","Link","FullscreenWrapper","Navigation","BottomNavigation","Page","Header","Toolbar","Title","Typography","App","useReducer","authUser","authDispatch","page","setPage","AppBar","position","path","to","Loaderboard","toLowerCase","newPage","showLabels","label","icon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e36d4fb.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Game = (props) => {\r\n    return <h1>I'm a Game</h1>\r\n}\r\n\r\nexport default Game","\r\nimport styled from 'styled-components'\r\nimport { TableHead as MuiTableHead } from '@material-ui/core'\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #999;\r\n    padding: 10%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n`\r\nconst Card = styled.div`\r\n    padding: 40px;\r\n    background-color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nconst TableHead = styled(MuiTableHead)`\r\n    background-color: #bbb;\r\n`\r\nexport {\r\n    Wrapper,\r\n    Card,\r\n    TableHead\r\n}","import React from 'react'\r\nimport { Paper } from '@material-ui/core'\r\nimport { TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { Wrapper, Card, TableHead } from '../utils/styled-ui'\r\n\r\nconst Leaderboard = (props) => {\r\n    let scores = props.scores || []\r\n    if (scores) scores = scores.sort((a, b) =>  b.score - a.score)\r\n\r\n    return <Wrapper>\r\n            <Card>\r\n                <h3>üèÜ  LEADERBOARD  üèÜ</h3><br />\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                { scores.length === 0 ?\r\n                                    <TableCell align=\"center\">IF YOU PLAY NOW YOU WILL BE #1!</TableCell>\r\n                                :\r\n                                    <>\r\n                                        <TableCell align=\"center\">PLAYER</TableCell>\r\n                                        <TableCell align=\"center\">SCORE</TableCell>\r\n                                        <TableCell align=\"center\">DATE</TableCell>\r\n                                    </>\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            { scores.map( (s, key) => \r\n                                <TableRow key={key}>\r\n                                    <TableCell align=\"center\">{s.userId}</TableCell>\r\n                                    <TableCell align=\"center\">{s.score}</TableCell>\r\n                                    <TableCell align=\"center\">{s.date}</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Card>\r\n        </Wrapper>\r\n}\r\n\r\nexport default Leaderboard","import React, { useState } from 'react'\r\nimport { Button, Input, Paper } from '@material-ui/core'\r\nimport { TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { Wrapper, Card, TableHead } from '../utils/styled-ui'\r\n\r\nconst Profile = (props) => {\r\n    const { user, login, logout } = props\r\n    const [ userName, setUsername ] = useState('')\r\n\r\n    const onInputChage = (e) => setUsername(e.target.value)\r\n\r\n    return <Wrapper>\r\n        { user ?\r\n            <Card>\r\n                <h3>‚≠ê Welcome <b>{user.name}</b> ‚≠ê</h3><br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => logout()}>\r\n                    LOGOUT\r\n                </Button>\r\n                <br/><br/>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                { user.scores.length === 0 ?\r\n                                    <TableCell align=\"center\">PLAY THE GAME TO SEE YOUR SCORES HERE!</TableCell>\r\n                                :\r\n                                    <>\r\n                                        <TableCell align=\"center\">SCORE</TableCell>\r\n                                        <TableCell align=\"center\">DATE</TableCell>\r\n                                    </>\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            { user.scores.map( (s, key) => \r\n                                <TableRow key={key}>\r\n                                    <TableCell align=\"center\">{s.score}</TableCell>\r\n                                    <TableCell align=\"center\">{s.date}</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Card>\r\n        :\r\n            <Card>\r\n                <h2>What's your name?</h2>\r\n                <form>\r\n                    <Input value={userName} onChange={onInputChage} placeholder=\"Elon, Mark, Steve,...\"> </Input>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => login(userName)}>\r\n                        LOGIN\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        }\r\n    </Wrapper>\r\n}\r\n\r\nexport default Profile","const dummyScores = [\r\n    {\r\n        userId: 'elon',\r\n        score: 8,\r\n        date: '1/1/2001',\r\n    },\r\n    {\r\n        userId: 'elon',\r\n        score: 9,\r\n        date: '3/3/2003',\r\n    },\r\n    {\r\n        userId: 'mark',\r\n        score: 2,\r\n        date: '3/3/2003',\r\n    },\r\n    {\r\n        userId: 'steve',\r\n        score: 7,\r\n        date: '3/3/2003',\r\n    },\r\n    {\r\n        userId: 'steve',\r\n        score: 3,\r\n        date: '3/3/2003',\r\n    }\r\n]\r\n\r\nconst dummyUsers = {\r\n    'elon': {\r\n        id: 'elon',\r\n        name: 'Elon Musk'\r\n    },\r\n    'mark': {\r\n        id: 'mark',\r\n        name: 'Mark Zuck'\r\n    },\r\n    'steve': {\r\n        id: 'steve',\r\n        name: 'Steve Jobs'\r\n    }\r\n}\r\n\r\nexport {\r\n    dummyScores,\r\n    dummyUsers\r\n}","const setItem = (key, value) => \r\n    localStorage.setItem(key, JSON.stringify(value))\r\n\r\nconst getItem = (key) =>\r\n    JSON.parse(localStorage.getItem(key))\r\n\r\nconst init = (scores, users) => {\r\n    if (!getItem('scores')) {\r\n        setItem('scores', (scores))\r\n    }\r\n    if (!getItem('users')) {\r\n        setItem('users', users)\r\n    }\r\n}\r\n\r\nconst setAuthId = (authId) =>\r\n    setItem('authId', authId)\r\n\r\nconst getAuthId = () => \r\n    getItem('authId')\r\n\r\nconst addUser = (id, name) => {\r\n    let users = getItem('users')\r\n    users[id] = { id, name }\r\n    setItem('users', users)\r\n    return users[id]\r\n}\r\n\r\nconst getUser = (userId) => {\r\n    let users = getItem('users')\r\n    let user\r\n    if (users) user = users[userId]\r\n    if (user) user.scores = getScoresByUser(userId)\r\n    return user\r\n}\r\n\r\nconst getScores = () => getItem('scores')\r\nconst addScore = (userId, score) => {\r\n    const scores = getItem('scores')\r\n    const newScore = {userId, score}\r\n    setItem('scores', [...scores, newScore])\r\n}\r\nconst getScoresByUser = (authId) => {\r\n    const scores = getItem('scores')\r\n    // Won't scale well. It would be better to have\r\n    // an additional mapping userId -> scores\r\n    return scores.filter(({userId, _}) => userId === authId )\r\n}\r\n\r\nexport {\r\n    init,\r\n    setAuthId,\r\n    getAuthId,\r\n    addUser,\r\n    getUser,\r\n    getScores,\r\n    addScore,\r\n    getScoresByUser\r\n}","import React, { useState, useReducer } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  AppBar, BottomNavigation, BottomNavigationAction, \r\n  Typography, Toolbar\r\n} from '@material-ui/core'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Link, Redirect\r\n} from \"react-router-dom\"\r\n\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered'\r\nimport SportsEsportsSharpIcon from '@material-ui/icons/SportsEsportsSharp'\r\n\r\nimport Game from './pages/Game'\r\nimport Loaderboard from './pages/Loaderboard'\r\nimport Profile from './pages/Profile'\r\n\r\nimport { dummyScores, dummyUsers } from './utils/defaults'\r\nimport * as storage from './utils/storage'\r\n\r\nconst authReducer = (user, action) => {\r\n  switch (action.type) {\r\n    case 'login':\r\n      storage.setAuthId(action.user.id)\r\n      return action.user\r\n    case 'logout':\r\n      storage.setAuthId(null)\r\n      return null\r\n    default:\r\n      return user\r\n  }\r\n}\r\n\r\nconst scoresReducer = (scores, action) => {\r\n  if (action.type == 'add') {\r\n    scores.push(action.score)\r\n  }\r\n  return scores\r\n}\r\n\r\nconst App = () => {\r\n  storage.init(dummyScores, dummyUsers)\r\n\r\n  const authId = storage.getAuthId()\r\n  const [authUser, authDispatch] = useReducer(authReducer, storage.getUser(authId))\r\n\r\n  const [scores, scoreDispatch] = useReducer(scoresReducer, storage.getScores())\r\n\r\n  const [page, setPage] = useState(0)\r\n  const switchPage = (_, newPage) => setPage(newPage)\r\n\r\n  const loginHandler = (userName) => {\r\n    // Users are indexed using their username\r\n    const userId = userName.toLowerCase()\r\n    let user = storage.getUser(userId)\r\n    let scores = storage.getScoresByUser(userId)\r\n    // Quickly handle signup\r\n    if (!user) {\r\n      user = storage.addUser(userId, userName)\r\n    }\r\n    user.scores = scores\r\n    authDispatch({ type: 'login', user})\r\n  }\r\n\r\n  return (\r\n    <FullscreenWrapper>\r\n      <AppBar position=\"static\">\r\n        <Header>\r\n          <Title variant=\"h6\">LyriXmatch</Title>\r\n        </Header>\r\n      </AppBar>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/game\">\r\n            <Page>\r\n              { authUser ? <Game /> : <Redirect to='/' />}\r\n            </Page>\r\n          </Route>\r\n          <Route path=\"/leaderboard\">\r\n            <Page>\r\n              { authUser ? <Loaderboard scores={scores} /> : <Redirect to='/' />}\r\n            </Page>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Page>\r\n              <Profile\r\n                user={authUser}\r\n                login={loginHandler}\r\n                logout={() => authDispatch({ type: 'logout'})} />\r\n            </Page>\r\n          </Route>\r\n        </Switch>\r\n        <Navigation\r\n          value={page}\r\n          onChange={switchPage}\r\n          showLabels\r\n        >\r\n          <Tab label=\"LEADERBOARD\" icon={<FormatListNumberedIcon />} to=\"/leaderboard\" />\r\n          <Tab label=\"PLAY\" icon={<SportsEsportsSharpIcon />} to=\"/game\" />\r\n          <Tab label=\"PROFILE\" icon={<PersonIcon />} to=\"/\" />\r\n        </Navigation>\r\n      </Router>\r\n    </FullscreenWrapper>\r\n  )\r\n}\r\n\r\nfunction Tab(props) {\r\n  return <BottomNavigationAction component={Link} {...props} />\r\n}\r\n\r\nconst FullscreenWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst Navigation = styled(BottomNavigation)`\r\n  bottom: 0;\r\n`\r\nconst Page = styled.div`\r\n  background-color: #999;\r\n  height: 100%;\r\n`\r\nconst Header = styled(Toolbar)`\r\n  background-color: white;\r\n  color: #666;\r\n`\r\nconst Title = styled(Typography)`\r\n  width: 100%;\r\n  text-align: center;\r\n`\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}