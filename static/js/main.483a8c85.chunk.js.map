{"version":3,"sources":["components/styled.js","components/GameCard.js","components/Game.js","utils/mxm-api.js","pages/GameWrapper.js","pages/Loaderboard.js","pages/Profile.js","utils/defaults.js","utils/storage.js","App.js","index.js"],"names":["Wrapper","styled","div","Card","TableWrapper","TableContainer","TableHeadCell","TableCell","trans","r","s","animated","Title","h2","Quote","h1","Answer","AnswerButton","Button","Track","GameCard","props","rot","scale","card","onResult","index","style","quote","options","answer","track","useState","choice","makeChoice","transform","interpolate","map","name","i","key","variant","color","onClick","a","GameInfo","Score","Countdown","Game","cards","setLastScore","score","setScore","currQuest","setCurrQuest","countdown","setCountdown","intervalCd","setIntervalCd","useSprings","length","x","y","Math","random","delay","opacity","to","from","quests","set","showNextCard","q","setTimeout","cardIndex","restartCountdown","clearInterval","useEffect","interval","setInterval","cd","date","Date","toLocaleString","res","correct","url","endpoint","params","fetch","fetchJsonp","then","json","Promise","resolve","message","body","artists","artist_list","artist","artist_name","getCards","page","track_list","commontrack_id","track_name","getTracks","tracks","all","async","lyrics","lyrics_body","split","filter","l","floor","push","randomArtist","GameWrapper","saveScore","isPlaying","setPlaying","lastScore","setCards","Fab","max","c","Leaderboard","scores","sort","b","component","Paper","Table","stickyHeader","TableHead","TableRow","align","TableBody","userId","Profile","user","login","logout","userName","setUsername","Input","value","onChange","e","target","placeholder","dummyScores","dummyUsers","elon","id","mark","steve","setItem","localStorage","JSON","stringify","getItem","parse","setAuthId","authId","getUser","users","getScoresByUser","_","authReducer","action","type","storage","newScore","TabPage","children","Page","hidden","FullscreenWrapper","Navigation","BottomNavigation","Header","Toolbar","Typography","Content","App","useReducer","authUser","authUserDispatch","setScores","setPage","loginHandler","toLowerCase","AppBar","position","Loaderboard","newPage","showLabels","BottomNavigationAction","label","icon","console","log","warn","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.483a8c85.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { TableCell, TableContainer } from \"@material-ui/core\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 7vh 10vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  box-sizing: border-box;\n`;\nconst Card = styled.div`\n  padding: 40px;\n  border-radius: 8px;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 5px 15px 0px #333;\n`;\n\nconst TableWrapper = styled(TableContainer)`\n  max-height: 40vh;\n`;\nconst TableHeadCell = styled(TableCell)`\n  background-color: #bbb !important;\n`;\nexport { Wrapper, Card, TableWrapper, TableHeadCell };\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { animated, interpolate } from \"react-spring\";\nimport { Button } from \"@material-ui/core\";\n\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(30deg) rotateY(${r /\n    10}deg) rotateZ(${r}deg) scale(${s})`;\n\nconst GameCard = props => {\n  const { rot, scale, card, onResult, index, style } = props;\n  const { quote, options, answer, track } = card;\n  const [choice, makeChoice] = useState(null);\n\n  const onAnswer = a => {\n    if (choice === null) {\n      makeChoice(a);\n      onResult(a === answer);\n    }\n  };\n\n  return (\n    <Wrapper style={style}>\n      <Card style={{ transform: interpolate([rot, scale], trans) }}>\n        <Title>({index}) Who sings...</Title>\n        <Quote>\"{quote}\"</Quote>\n        <br />\n        {options.map((name, i) => (\n          <Answer key={i}>\n            <AnswerButton\n              variant={\n                choice === null || i !== answer ? \"outlined\" : \"contained\"\n              }\n              color={\n                choice === null || choice === answer ? \"primary\" : \"secondary\"\n              }\n              onClick={() => onAnswer(i)}\n            >\n              <h3>{name}</h3>\n            </AnswerButton>\n          </Answer>\n        ))}\n        { choice !== null &&  <Track><span>🎵</span> <b>{track}</b></Track> }\n      </Card>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled(animated.div)`\n  position: absolute;\n  will-change: transform;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Card = styled(animated.div)`\n  background-color: white;\n  background-size: auto 85%;\n  background-repeat: no-repeat;\n  background-position: center center;\n  width: 45vh;\n  max-width: 300px;\n  height: 85vh;\n  max-height: 570px;\n  will-change: transform;\n  border-radius: 10px;\n  padding: 30px;\n  box-sizing: borer-box;\n  box-shadow: 0 12.5px 100px -10px rgba(50, 50, 73, 0.4),\n    0 10px 10px -10px rgba(50, 50, 73, 0.3);\n  display: flex;\n  flex-direction: column;\n`;\nconst Title = styled.h2`\n  text-align: center;\n  color: #333;\n`;\nconst Quote = styled.h1`\n  text-align: center;\n`;\nconst Answer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  // border: 1px solid #666;\n  padding: 10px;\n`;\nconst AnswerButton = styled(Button)`\n  flex-grow: 1;\n`;\nconst Track = styled.div`\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.1em;\n`\n\nexport default GameCard;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSprings, interpolate } from \"react-spring\";\n\nimport { Card } from \"../components/styled\";\nimport GameCard from \"../components/GameCard\";\n\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to = i => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100,\n  opacity: 1\n});\nconst from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000, opacity: 1 });\n\nconst Game = props => {\n  const { cards, setLastScore } = props;\n  const [score, setScore] = useState(0);\n  const [currQuest, setCurrQuest] = useState(0);\n  const [countdown, setCountdown] = useState(null);\n  const [intervalCd, setIntervalCd] = useState(null);\n\n  const [quests, set] = useSprings(cards.length, i => ({\n    ...to(i),\n    from: from(i)\n  }));\n\n  const onCardResult = (i, correct) => {\n    if (countdown > 0) {\n      if (correct) setScore(s => s + 1);\n      clearInterval(intervalCd);\n      showNextCard();\n    }\n  };\n  const showNextCard = () => {\n    setCurrQuest(q => q + 1);\n    setTimeout(() => {\n      set(i => (currQuest === cardIndex(i) ? { x: 1000, opacity: 0 } : null));\n      restartCountdown();\n    }, 1500);\n  };\n  const restartCountdown = () => {\n    clearInterval(intervalCd);\n    setIntervalCd(null);\n    setCountdown(20);\n  };\n  const cardIndex = i => cards.length - 1 - i;\n\n  useEffect(() => {\n    // If game not started\n    if (countdown === null) {\n      restartCountdown();\n    // If the countdown isn't running\n    } else if (!intervalCd && countdown > 0) {\n      const interval = setInterval(() => {\n        setCountdown(cd => cd - 1);\n      }, 1000);\n      setIntervalCd(interval);\n    // Switch card when time is over\n    } else if (intervalCd && countdown === 0 && currQuest !== cards.length) {\n      clearInterval(intervalCd);\n      setIntervalCd(null);\n      showNextCard();\n    // If it's the last question\n    } else if (currQuest === cards.length) {\n      clearInterval(intervalCd);\n      setTimeout(() =>\n        setLastScore({\n          score,\n          date: new Date().toLocaleString()\n        }), 1500)\n    }\n  }, [countdown, currQuest]);\n\n  return (\n    <Wrapper>\n      <GameInfo>\n        <Countdown>\n          <h3>{countdown}s</h3>\n        </Countdown>\n        <Score>\n          <h3>\n            Your score: {score}/{currQuest}\n          </h3>\n        </Score>\n      </GameInfo>\n      {quests.map(({ x, y, rot, scale, opacity }, i) => (\n        <GameCard\n          key={i}\n          index={cardIndex(i) + 1}\n          rot={rot}\n          scale={scale}\n          card={cards[i]}\n          onResult={res => onCardResult(i, res)}\n          style={{\n            opacity,\n            transform: interpolate(\n              [x, y],\n              (x, y) => `translate3d(${x}px,${y}px,0)`\n            )\n          }}\n        />\n      ))}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 100vw;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst GameInfo = styled.div`\n  z-index: 100;\n  position: fixed;\n  top: 80px;\n  height: 60px;\n  display: flex;\n`;\n\nconst Score = styled(Card)`\n  padding: 0px 30px;\n  margin: 0px 10px;\n  box-sizing: border-box;\n  background-color: rgba(63, 130, 38);\n  color: white;\n`;\nconst Countdown = styled(Card)`\n  padding: 0px 30px;\n  margin: 0px 10px;\n  box-sizing: border-box;\n  background-color: rgba(176, 95, 25);\n  color: white;\n`;\n\nexport default Game;\n","import fetchJsonp from \"fetch-jsonp\";\n\nconst API_KEY = \"ba86ae56dbd085f1a001ee4739a8e45b\";\nconst url = (endpoint, params) =>\n  `https://api.musixmatch.com/ws/1.1/${endpoint}?format=jsonp&callback=callback&${params}&apikey=${API_KEY}`;\n\nconst fetch = url =>\n  fetchJsonp(url)\n    .then(r => r.json())\n    .then(r => Promise.resolve(r.message.body));\n\n// Very naive way of fetching a pool of artists\nlet artists = null;\nfetch(url(\"chart.artists.get\", `page=1&page_size=80&country=it`)).then(\n  ({ artist_list }) =>\n    (artists = artist_list.map(({ artist }) => artist.artist_name))\n);\n\nconst getLyrics = commontrack_id =>\n  fetch(url(\"track.lyrics.get\", `commontrack_id=${commontrack_id}`)).then(\n    ({ lyrics }) =>\n      Promise.resolve(\n        lyrics.lyrics_body\n          .split(\"\\n\")\n          .filter(l => l && l !== \"\" && l.length > 20 && l.length < 50)[0]\n      )\n  );\n\nconst getTracks = page =>\n  fetch(\n    url(\n      \"chart.tracks.get\",\n      `page=${page}&page_size=10&country=it&f_has_lyrics=1`\n    )\n  ).then(({ track_list }) =>\n    Promise.resolve(\n      track_list.map(({ track }) => {\n        const { commontrack_id, artist_name, track_name } = track;\n        return {\n          commontrack_id,\n          artist_name,\n          track_name\n        };\n      })\n    )\n  );\n\nconst getCards = page =>\n  getTracks(page)\n    .then(tracks =>\n      Promise.all(\n        tracks.map(async track => ({\n          ...track,\n          quote: await getLyrics(track.commontrack_id)\n        }))\n      )\n    )\n    .then(tracks =>\n      Promise.resolve(\n        tracks.map(track => {\n          const { artist_name, track_name, quote } = track;\n          const answer = Math.floor(Math.random() * 2);\n          let options = [];\n          while (options.length < 3) {\n            if (options.length === answer) {\n              options.push(artist_name);\n            } else {\n              // TODO this can lead at duplicated artists\n              const i = Math.floor(Math.random() * artists.length - 1);\n              const randomArtist = artists[i];\n              if (randomArtist && randomArtist !== \"\" && randomArtist !== artist_name) {\n                options.push(randomArtist);\n              }\n            }\n          }\n          return {\n            quote,\n            options,\n            answer,\n            track: track_name\n          };\n        })\n      )\n    );\n\nexport { getCards };\n","import React, { useState, useEffect, useReducer } from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\n\nimport { Card } from \"../components/styled\";\nimport Game from \"../components/Game\";\nimport { getCards } from '../utils/mxm-api'\n\nconst GameWrapper = props => {\n  const { saveScore } = props;\n  const [isPlaying, setPlaying] = useState(false);\n  const [lastScore, setLastScore] = useState(null);\n  const [cards, setCards] = useState(null)\n\n  const randomInt = (max) => Math.floor(Math.random() * Math.floor(max));\n\n  const startGame = () => {\n    getCards(randomInt(18)).then(c => {\n      setCards(c)\n      setPlaying(true)\n    })\n  };\n\n  useEffect(() => {\n    if (lastScore !== null) {\n      saveScore(lastScore);\n      setPlaying(false);\n    }\n  }, [lastScore]);\n  return (\n    <Wrapper>\n      {!isPlaying ? (\n        <Card>\n          <h3>🥇 {lastScore === null ? \"Get Ready!\" : \"Play Again!\"} 🥇</h3>\n          <br />\n          <Fab color=\"primary\" onClick={startGame}>\n            <PlayArrowIcon />\n          </Fab>\n          <h4>{lastScore !== null && `Last Score: ${lastScore.score}`}</h4>\n        </Card>\n      ) : (\n        <Game cards={cards} setLastScore={setLastScore} />\n      )}\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 100vw;\n  overflow: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default GameWrapper;\n","import React from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell\n} from \"@material-ui/core\";\nimport { Wrapper, Card, TableWrapper, TableHeadCell } from \"../components/styled\";\n\nconst Leaderboard = props => {\n  let scores = props.scores || [];\n  if (scores) scores = scores.sort((a, b) => b.score - a.score);\n\n  return (\n    <Wrapper>\n      <Card>\n        <h3>🏆 LEADERBOARD 🏆</h3>\n        <br />\n        <TableWrapper component={Paper}>\n          <Table stickyHeader>\n            <TableHead>\n              <TableRow>\n                {scores.length === 0 ? (\n                  <TableCell align=\"center\">\n                    IF YOU PLAY NOW YOU WILL BE #1!\n                  </TableCell>\n                ) : (\n                  <>\n                    <TableHeadCell align=\"center\">#</TableHeadCell>\n                    <TableHeadCell align=\"center\">PLAYER</TableHeadCell>\n                    <TableHeadCell align=\"center\">SCORE</TableHeadCell>\n                    <TableHeadCell align=\"center\">DATE</TableHeadCell>\n                  </>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {scores.map((s, key) => (\n                <TableRow key={key}>\n                  <TableCell align=\"center\">{key + 1}</TableCell>\n                  <TableCell align=\"center\">{s.userId}</TableCell>\n                  <TableCell align=\"center\">{s.score}</TableCell>\n                  <TableCell align=\"center\">{s.date}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableWrapper>\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport default Leaderboard;\n","import React, { useState } from \"react\";\nimport { Button, Input, Paper } from \"@material-ui/core\";\nimport {\n  Table,\n  TableBody,\n  TableHead,\n  TableRow,\n  TableCell\n} from \"@material-ui/core\";\n\nimport { Wrapper, Card, TableHeadCell, TableWrapper } from \"../components/styled\";\n\nconst Profile = props => {\n  const { user, login, logout } = props;\n  const [userName, setUsername] = useState(\"\");\n\n  const onInputChage = e => setUsername(e.target.value);\n\n  return (\n    <Wrapper>\n      {user ? (\n        <Card>\n          <h3>\n            ⭐ Welcome <u>{user.name}</u> ⭐\n          </h3>\n          <br />\n          <Button variant=\"contained\" color=\"primary\" onClick={() => logout()}>\n            LOGOUT\n          </Button>\n          <br />\n          <br />\n          <TableWrapper component={Paper}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  {user.scores.length === 0 ? (\n                    <TableHeadCell align=\"center\">\n                      PLAY THE GAME TO SEE YOUR SCORES HERE!\n                    </TableHeadCell>\n                  ) : (\n                    <>\n                      <TableHeadCell align=\"center\">SCORE</TableHeadCell>\n                      <TableHeadCell align=\"center\">DATE</TableHeadCell>\n                    </>\n                  )}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {user.scores.map((s, key) => (\n                  <TableRow key={key}>\n                    <TableCell align=\"center\">{s.score}</TableCell>\n                    <TableCell align=\"center\">{s.date}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableWrapper>\n        </Card>\n      ) : (\n        <Card>\n          <h2>What's your name?</h2>\n          <form>\n            <Input\n              value={userName}\n              onChange={onInputChage}\n              placeholder=\"Elon, Mark, Steve,...\"\n            >\n              {\" \"}\n            </Input>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => login(userName)}\n            >\n              LOGIN\n            </Button>\n          </form>\n        </Card>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Profile;\n","const dummyScores = [\n  {\n    userId: \"elon\",\n    score: 8,\n    date: \"28/08/2019, 11:25:11\"\n  },\n  {\n    userId: \"elon\",\n    score: 9,\n    date: \"28/08/2019, 10:05:22\"\n  },\n  {\n    userId: \"mark\",\n    score: 2,\n    date: \"02/09/2017, 08:30:24\"\n  },\n  {\n    userId: \"steve\",\n    score: 7,\n    date: \"17/11/2016, 21:07:56\"\n  },\n  {\n    userId: \"steve\",\n    score: 3,\n    date: \"29/09/2004, 01:43:56\"\n  }\n];\n\nconst dummyUsers = {\n  elon: {\n    id: \"elon\",\n    name: \"Elon Musk\"\n  },\n  mark: {\n    id: \"mark\",\n    name: \"Mark Zuck\"\n  },\n  steve: {\n    id: \"steve\",\n    name: \"Steve Jobs\"\n  }\n};\n\nexport { dummyScores, dummyUsers };\n","const setItem = (key, value) =>\n  localStorage.setItem(key, JSON.stringify(value));\n\nconst getItem = key => JSON.parse(localStorage.getItem(key));\n\nconst init = (scores, users) => {\n  if (!getItem(\"scores\")) {\n    setItem(\"scores\", scores);\n  }\n  if (!getItem(\"users\")) {\n    setItem(\"users\", users);\n  }\n};\n\nconst setAuthId = authId => setItem(\"authId\", authId);\n\nconst getAuthId = () => getItem(\"authId\");\n\nconst addUser = (id, name) => {\n  let users = getItem(\"users\");\n  users[id] = { id, name };\n  setItem(\"users\", users);\n  return users[id];\n};\n\nconst getUser = userId => {\n  let users = getItem(\"users\");\n  let user;\n  if (users) user = users[userId];\n  if (user) user.scores = getScoresByUser(userId);\n  return user;\n};\n\nconst getScores = () => getItem(\"scores\");\nconst addNewScore = newScore => {\n  const scores = getItem(\"scores\");\n  setItem(\"scores\", [...scores, newScore]);\n};\nconst getScoresByUser = authId => {\n  const scores = getItem(\"scores\");\n  // Won't scale well. It would be better to have\n  // an additional mapping userId -> scores\n  return scores.filter(({ userId, _ }) => userId === authId);\n};\n\nexport {\n  init,\n  setAuthId,\n  getAuthId,\n  addUser,\n  getUser,\n  getScores,\n  addNewScore,\n  getScoresByUser\n};\n","import React, { useState, useReducer } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  AppBar,\n  BottomNavigation,\n  BottomNavigationAction,\n  Typography,\n  Toolbar\n} from \"@material-ui/core\";\n\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\nimport SportsEsportsSharpIcon from \"@material-ui/icons/SportsEsportsSharp\";\n\nimport GameWrapper from \"./pages/GameWrapper\";\nimport Loaderboard from \"./pages/Loaderboard\";\nimport Profile from \"./pages/Profile\";\n\nimport { dummyScores, dummyUsers } from \"./utils/defaults\";\nimport * as storage from \"./utils/storage\";\n\nconst authReducer = (user, action) => {\n  switch (action.type) {\n    case \"login\":\n      storage.setAuthId(action.user.id);\n      return action.user;\n    case \"logout\":\n      storage.setAuthId(null);\n      return null;\n    case \"newScore\":\n      user.scores.push(action.newScore);\n      return user;\n    default:\n      return user;\n  }\n};\n\nconst App = () => {\n  storage.init(dummyScores, dummyUsers);\n  const authId = storage.getAuthId();\n  const [authUser, authUserDispatch] = useReducer(\n    authReducer,\n    storage.getUser(authId)\n  );\n  const [scores, setScores] = useState(storage.getScores());\n  const [page, setPage] = useState(1);\n\n  const addScore = score => {\n    const newScore = {\n      ...score,\n      userId: authId\n    };\n    setScores(scores => {\n      scores.push(newScore);\n      return scores;\n    });\n    authUserDispatch({ type: \"newScore\", newScore });\n    storage.addNewScore(newScore);\n  };\n\n  const switchPage = (a, newPage) => {\n    setPage(newPage);\n  } \n\n  const loginHandler = userName => {\n    // Users are indexed using their username\n    const userId = userName.toLowerCase();\n    let user = storage.getUser(userId);\n    let scores = storage.getScoresByUser(userId);\n    // Quickly handle signup\n    if (!user) {\n      user = storage.addUser(userId, userName);\n    }\n    user.scores = scores;\n    authUserDispatch({ type: \"login\", user });\n  };\n\n  return (\n    <FullscreenWrapper>\n      <AppBar position=\"static\">\n        <Header>\n          <Title variant=\"h6\">LyriXmatch</Title>\n        </Header>\n      </AppBar>\n      <Content>\n        <TabPage page={page} index={0}>\n          <Loaderboard scores={scores} />\n        </TabPage>\n        <TabPage page={page} index={1}>\n          {authUser ? (\n            <GameWrapper saveScore={addScore} />\n          ) : (\n            <Profile\n              user={authUser}\n              login={loginHandler}\n              logout={() => authUserDispatch({ type: \"logout\" })}\n            />\n          )}\n        </TabPage>\n        <TabPage page={page} index={2}>\n          <Profile\n            user={authUser}\n            login={loginHandler}\n            logout={() => authUserDispatch({ type: \"logout\" })}\n          />\n        </TabPage>\n      </Content>\n      <Navigation value={page} onChange={switchPage} showLabels>\n        <BottomNavigationAction\n          label=\"LEADERBOARD\"\n          icon={<FormatListNumberedIcon />}\n        />\n        <BottomNavigationAction\n          label=\"PLAY\"\n          icon={<SportsEsportsSharpIcon />}\n        />\n        <BottomNavigationAction label=\"PROFILE\" icon={<PersonIcon />} />\n      </Navigation>\n    </FullscreenWrapper>\n  );\n};\n\nconst TabPage = ({ children, page, index }) => (\n  <Page hidden={page !== index}>{children}</Page>\n);\n\nconst FullscreenWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\nconst Navigation = styled(BottomNavigation)`\n  bottom: 0;\n  width: 100%;\n  z-index: 10;\n`;\nconst Header = styled(Toolbar)`\n  background-color: white;\n  color: #666;\n`;\nconst Title = styled(Typography)`\n  width: 100%;\n  text-align: center;\n`;\nconst Content = styled.div`\n  height: 100%;\n  width: 100%;\n  background-color: #85aded;\n`;\nconst Page = styled.div`\n  height: calc(100vh - 120px);\n  width: 100%;\n  position: absolute;\n`;\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconsole = {\n    log: () => {},\n    warn: () => {},\n    error: () => {}\n}\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}