{"version":3,"sources":["components/styled.js","components/GameCard.js","pages/Game.js","pages/Loaderboard.js","pages/Profile.js","utils/defaults.js","utils/storage.js","App.js","index.js"],"names":["Wrapper","styled","div","Card","TableHead","MuiTableHead","trans","r","s","animated","Title","h2","Quote","h1","Answer","AnswerButton","Button","GameCard","props","rot","scale","question","onResult","index","quote","options","answer","useState","choice","makeChoice","style","transform","interpolate","map","name","i","key","variant","color","onClick","a","cards","id","GameInfo","Score","Countdown","Game","p","isPlaying","setPlaying","score","setScore","currQuest","setCurrQuest","countdown","setCountdown","intervalCd","setIntervalCd","useSprings","length","x","y","Math","random","delay","opacity","to","from","quests","set","showNextCard","q","setTimeout","cardIndex","restartCountdown","clearInterval","useEffect","interval","setInterval","cd","res","Fab","Leaderboard","scores","sort","b","TableContainer","component","Paper","Table","TableRow","TableCell","align","TableBody","userId","date","Profile","user","login","logout","userName","setUsername","Input","value","onChange","e","target","placeholder","dummyScores","dummyUsers","setItem","localStorage","JSON","stringify","getItem","parse","setAuthId","authId","getUser","users","getScoresByUser","filter","_","authReducer","action","type","storage","scoresReducer","push","Tab","BottomNavigationAction","Link","FullscreenWrapper","Navigation","BottomNavigation","Page","Header","Toolbar","Typography","App","useReducer","authUser","authDispatch","page","setPage","loginHandler","toLowerCase","AppBar","position","path","Loaderboard","newPage","showLabels","label","icon","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6319c4e3.chunk.js","sourcesContent":["\r\nimport styled from 'styled-components'\r\nimport { TableHead as MuiTableHead } from '@material-ui/core'\r\n\r\nconst Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #999;\r\n    padding: 10%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    box-sizing: border-box;\r\n`\r\nconst Card = styled.div`\r\n    padding: 40px;\r\n    border-radius: 8px;\r\n    background-color: white;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    box-shadow: 0px 5px 15px 0px #333;\r\n`\r\nconst TableHead = styled(MuiTableHead)`\r\n    background-color: #bbb;\r\n`\r\nexport {\r\n    Wrapper,\r\n    Card,\r\n    TableHead\r\n}","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { animated, interpolate } from 'react-spring'\r\nimport { Button } from '@material-ui/core'\r\n\r\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\r\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`\r\n\r\nconst GameCard = (props) => {\r\n    const { rot, scale, question, onResult, index } = props\r\n    const { quote, options, answer } = question\r\n    const [choice, makeChoice] = useState(null)\r\n\r\n    const onAnswer = (a) => {\r\n        if (choice === null){\r\n            makeChoice(a)\r\n            onResult(a === answer)\r\n        }\r\n    }\r\n\r\n    return <Wrapper {...props}>\r\n        <Card style={{ transform: interpolate([rot, scale], trans) }}>\r\n            <Title>({index}) Who sings...</Title>\r\n            <Quote>\"{quote}\"</Quote><br />\r\n            {\r\n                options.map((name, i) =>\r\n                    <Answer key={i}>\r\n                        <AnswerButton\r\n                            variant={ choice === null || i != answer ? \"outlined\" : \"contained\"} \r\n                            color={ choice === null || choice == answer ? \"primary\" : \"secondary\"}\r\n                            onClick={() => onAnswer(i)}>\r\n                            <h3>{name}</h3> \r\n                        </AnswerButton>\r\n                    </Answer>\r\n                )\r\n            }\r\n        </Card>\r\n    </Wrapper>\r\n}\r\n\r\nconst Wrapper = styled(animated.div)`\r\n    position: absolute;\r\n    will-change: transform;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst Card = styled(animated.div)`\r\n    background-color: white;\r\n    background-size: auto 85%;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    width: 45vh;\r\n    max-width: 300px;\r\n    height: 85vh;\r\n    max-height: 570px;\r\n    will-change: transform;\r\n    border-radius: 10px;\r\n    padding: 30px;\r\n    box-sizing: borer-box;\r\n    box-shadow: 0 12.5px 100px -10px rgba(50, 50, 73, 0.4), 0 10px 10px -10px rgba(50, 50, 73, 0.3);\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nconst Title = styled.h2`\r\n    text-align: center;\r\n    color: #333;\r\n`\r\nconst Quote = styled.h1`\r\n    text-align: center;\r\n`\r\nconst Answer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    // border: 1px solid #666;\r\n    padding: 10px;\r\n`\r\nconst AnswerButton = styled(Button)`\r\n    flex-grow: 1;\r\n`\r\n\r\nexport default GameCard","import React, { useState, useEffect } from 'react'\r\nimport { Fab } from '@material-ui/core'\r\nimport styled from 'styled-components'\r\nimport { useSprings, interpolate } from 'react-spring'\r\n\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\nimport { Card } from '../components/styled'\r\nimport GameCard from '../components/GameCard'\r\n\r\nconst cards = [\r\n  {\r\n    id: 0,\r\n    quote: 'Do you want to be my lover?',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 2\r\n  },\r\n  {\r\n    id: 1,\r\n    quote: 'Annie, are you ok?',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 0\r\n  },\r\n  {\r\n    id: 2,\r\n    quote: 'Rockstar, Rockstar, ...',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 1\r\n  },\r\n  {\r\n    id: 3,\r\n    quote: 'Do you want to be my lover?',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 2\r\n  },\r\n  {\r\n    id: 4,\r\n    quote: 'Do you want to be my lover?',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 2\r\n  },\r\n  {\r\n    id: 5,\r\n    quote: 'Do you want to be my lover?',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 2\r\n  },\r\n  {\r\n    id: 6,\r\n    quote: 'Do you want to be my lover?',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 2\r\n  },\r\n  {\r\n    id: 7,\r\n    quote: 'Do you want to be my lover?',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 2\r\n  },\r\n  {\r\n    id: 8,\r\n    quote: 'Do you want to be my lover?',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 2\r\n  },\r\n  {\r\n    id: 9,\r\n    quote: 'Do you want to be my lover? mario',\r\n    options: [ 'MJ', 'Sfera Ebbasta', 'Spice Girls' ],\r\n    answer: 2\r\n  },\r\n]\r\n\r\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\r\nconst to = i => ({ x: 0, y: i * -4, scale: 1, rot: -10 + Math.random() * 20, delay: i * 100, opacity: 1 })\r\nconst from = i => ({ x: 0, rot: 0, scale: 1.5, y: -1000, opacity: 1 })\r\n\r\nconst Game = (p) => {\r\n  const [isPlaying, setPlaying] = useState(false)\r\n  const [score, setScore] = useState(null)\r\n  const [currQuest, setCurrQuest] = useState(0)\r\n  const [countdown, setCountdown] = useState(0)\r\n  const [intervalCd, setIntervalCd] = useState(null)\r\n\r\n  const [quests, set] = useSprings(cards.length, i => ({ ...to(i), from: from(i) }))\r\n\r\n  const startGame = () => {\r\n    setPlaying(true)\r\n    setScore(0)\r\n    setTimeout(() => restartCountdown(), 1000)\r\n  }\r\n\r\n  const onCardResult = (i, correct) => {\r\n    if (correct) setScore(s => s + 1)\r\n    showNextCard()\r\n  }\r\n  const showNextCard = () => {\r\n    setCurrQuest(q => q + 1)\r\n    setTimeout(() => {\r\n      set(i => currQuest === cardIndex(i) ? ({x: 1000, opacity: 0}) : null)\r\n      restartCountdown()\r\n    }, 1000)\r\n  }\r\n  const restartCountdown = () => {\r\n    clearInterval(intervalCd)\r\n    setIntervalCd(null)\r\n    setCountdown(5)\r\n  }\r\n  const cardIndex = (i) => cards.length - 1 - i\r\n\r\n  useEffect(() => {\r\n    if (!intervalCd && countdown > 0) {\r\n      const interval = setInterval(() => {\r\n        setCountdown(cd => cd - 1)\r\n      }, 1000)\r\n      setIntervalCd(interval)\r\n    } else if (intervalCd && countdown === 0) {\r\n      clearInterval(intervalCd)\r\n      setIntervalCd(null)\r\n      showNextCard()\r\n    } else if(currQuest === cards.length) {\r\n      clearInterval(intervalCd)\r\n      setIntervalCd(null)\r\n      setPlaying(false)\r\n    }\r\n  }, [countdown])\r\n\r\n  return <Wrapper>\r\n    {\r\n      !isPlaying ?\r\n        <Card>\r\n          <h3>🥇 { score === null ? \"Get Ready!\" : \"Play Again!\" } 🥇</h3><br />\r\n          <Fab color=\"primary\" onClick={startGame}>\r\n            <PlayArrowIcon />\r\n          </Fab>\r\n          <h4>{ score !== null && `Last score: ${score}` }</h4>\r\n        </Card>\r\n      :\r\n        <>\r\n          <GameInfo>\r\n            <Countdown><h3>{countdown}s</h3></Countdown>\r\n            <Score><h3>Your score: {score}/{currQuest}</h3></Score>\r\n          </GameInfo>\r\n          {quests.map(({ x, y, rot, scale, opacity }, i) => \r\n            <GameCard key={i} index={cardIndex(i) + 1} rot={rot} scale={scale} question={cards[i]}\r\n              onResult={(res) => onCardResult(i, res)}\r\n              style={{ opacity, transform: interpolate([x, y], (x, y) => `translate3d(${x}px,${y}px,0)`) }}/>     \r\n          )}\r\n        </>\r\n    }\r\n    </Wrapper>\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  max-width: 100vw;\r\n  overflow: hidden;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nconst GameInfo = styled.div`\r\n  z-index: 100;\r\n  position: fixed;\r\n  top: 80px;\r\n  height: 60px;\r\n  display: flex;\r\n`\r\n\r\nconst Score = styled(Card)`\r\n  padding: 0px 30px;\r\n  margin: 0px 10px;\r\n  box-sizing: border-box;\r\n  background-color: rgba(63, 130, 38);\r\n  color: white; \r\n`\r\nconst Countdown = styled(Card)`\r\n  padding: 0px 30px;\r\n  margin: 0px 10px;\r\n  box-sizing: border-box;\r\n  background-color: rgba(176, 95, 25);\r\n  color: white; \r\n`\r\n\r\nexport default Game\r\n","import React from 'react'\r\nimport { Paper } from '@material-ui/core'\r\nimport { TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { Wrapper, Card, TableHead } from '../components/styled'\r\n\r\nconst Leaderboard = (props) => {\r\n    let scores = props.scores || []\r\n    if (scores) scores = scores.sort((a, b) =>  b.score - a.score)\r\n\r\n    return <Wrapper>\r\n            <Card>\r\n                <h3>🏆  LEADERBOARD  🏆</h3><br />\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                { scores.length === 0 ?\r\n                                    <TableCell align=\"center\">IF YOU PLAY NOW YOU WILL BE #1!</TableCell>\r\n                                :\r\n                                    <>\r\n                                        <TableCell align=\"center\">PLAYER</TableCell>\r\n                                        <TableCell align=\"center\">SCORE</TableCell>\r\n                                        <TableCell align=\"center\">DATE</TableCell>\r\n                                    </>\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            { scores.map( (s, key) => \r\n                                <TableRow key={key}>\r\n                                    <TableCell align=\"center\">{s.userId}</TableCell>\r\n                                    <TableCell align=\"center\">{s.score}</TableCell>\r\n                                    <TableCell align=\"center\">{s.date}</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Card>\r\n        </Wrapper>\r\n}\r\n\r\nexport default Leaderboard","import React, { useState } from 'react'\r\nimport { Button, Input, Paper } from '@material-ui/core'\r\nimport { TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core'\r\n\r\nimport { Wrapper, Card, TableHead } from '../components/styled'\r\n\r\nconst Profile = (props) => {\r\n    const { user, login, logout } = props\r\n    const [ userName, setUsername ] = useState('')\r\n\r\n    const onInputChage = (e) => setUsername(e.target.value)\r\n\r\n    return <Wrapper>\r\n        { user ?\r\n            <Card>\r\n                <h3>⭐ Welcome <b>{user.name}</b> ⭐</h3><br />\r\n                <Button variant=\"contained\" color=\"primary\" onClick={() => logout()}>\r\n                    LOGOUT\r\n                </Button>\r\n                <br/><br/>\r\n                <TableContainer component={Paper}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                { user.scores.length === 0 ?\r\n                                    <TableCell align=\"center\">PLAY THE GAME TO SEE YOUR SCORES HERE!</TableCell>\r\n                                :\r\n                                    <>\r\n                                        <TableCell align=\"center\">SCORE</TableCell>\r\n                                        <TableCell align=\"center\">DATE</TableCell>\r\n                                    </>\r\n                                }\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            { user.scores.map( (s, key) => \r\n                                <TableRow key={key}>\r\n                                    <TableCell align=\"center\">{s.score}</TableCell>\r\n                                    <TableCell align=\"center\">{s.date}</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Card>\r\n        :\r\n            <Card>\r\n                <h2>What's your name?</h2>\r\n                <form>\r\n                    <Input value={userName} onChange={onInputChage} placeholder=\"Elon, Mark, Steve,...\"> </Input>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => login(userName)}>\r\n                        LOGIN\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        }\r\n    </Wrapper>\r\n}\r\n\r\nexport default Profile","const dummyScores = [\r\n    {\r\n        userId: 'elon',\r\n        score: 8,\r\n        date: '1/1/2001',\r\n    },\r\n    {\r\n        userId: 'elon',\r\n        score: 9,\r\n        date: '3/3/2003',\r\n    },\r\n    {\r\n        userId: 'mark',\r\n        score: 2,\r\n        date: '3/3/2003',\r\n    },\r\n    {\r\n        userId: 'steve',\r\n        score: 7,\r\n        date: '3/3/2003',\r\n    },\r\n    {\r\n        userId: 'steve',\r\n        score: 3,\r\n        date: '3/3/2003',\r\n    }\r\n]\r\n\r\nconst dummyUsers = {\r\n    'elon': {\r\n        id: 'elon',\r\n        name: 'Elon Musk'\r\n    },\r\n    'mark': {\r\n        id: 'mark',\r\n        name: 'Mark Zuck'\r\n    },\r\n    'steve': {\r\n        id: 'steve',\r\n        name: 'Steve Jobs'\r\n    }\r\n}\r\n\r\nexport {\r\n    dummyScores,\r\n    dummyUsers\r\n}","const setItem = (key, value) => \r\n    localStorage.setItem(key, JSON.stringify(value))\r\n\r\nconst getItem = (key) =>\r\n    JSON.parse(localStorage.getItem(key))\r\n\r\nconst init = (scores, users) => {\r\n    if (!getItem('scores')) {\r\n        setItem('scores', (scores))\r\n    }\r\n    if (!getItem('users')) {\r\n        setItem('users', users)\r\n    }\r\n}\r\n\r\nconst setAuthId = (authId) =>\r\n    setItem('authId', authId)\r\n\r\nconst getAuthId = () => \r\n    getItem('authId')\r\n\r\nconst addUser = (id, name) => {\r\n    let users = getItem('users')\r\n    users[id] = { id, name }\r\n    setItem('users', users)\r\n    return users[id]\r\n}\r\n\r\nconst getUser = (userId) => {\r\n    let users = getItem('users')\r\n    let user\r\n    if (users) user = users[userId]\r\n    if (user) user.scores = getScoresByUser(userId)\r\n    return user\r\n}\r\n\r\nconst getScores = () => getItem('scores')\r\nconst addScore = (userId, score) => {\r\n    const scores = getItem('scores')\r\n    const newScore = {userId, score}\r\n    setItem('scores', [...scores, newScore])\r\n}\r\nconst getScoresByUser = (authId) => {\r\n    const scores = getItem('scores')\r\n    // Won't scale well. It would be better to have\r\n    // an additional mapping userId -> scores\r\n    return scores.filter(({userId, _}) => userId === authId )\r\n}\r\n\r\nexport {\r\n    init,\r\n    setAuthId,\r\n    getAuthId,\r\n    addUser,\r\n    getUser,\r\n    getScores,\r\n    addScore,\r\n    getScoresByUser\r\n}","import React, { useState, useReducer } from 'react'\r\nimport styled from 'styled-components'\r\nimport {\r\n  AppBar, BottomNavigation, BottomNavigationAction, \r\n  Typography, Toolbar\r\n} from '@material-ui/core'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch, Route, Link\r\n} from \"react-router-dom\"\r\n\r\nimport PersonIcon from '@material-ui/icons/Person'\r\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered'\r\nimport SportsEsportsSharpIcon from '@material-ui/icons/SportsEsportsSharp'\r\n\r\nimport Game from './pages/Game'\r\nimport Loaderboard from './pages/Loaderboard'\r\nimport Profile from './pages/Profile'\r\n\r\nimport { dummyScores, dummyUsers } from './utils/defaults'\r\nimport * as storage from './utils/storage'\r\n\r\nconst authReducer = (user, action) => {\r\n  switch (action.type) {\r\n    case 'login':\r\n      storage.setAuthId(action.user.id)\r\n      return action.user\r\n    case 'logout':\r\n      storage.setAuthId(null)\r\n      return null\r\n    default:\r\n      return user\r\n  }\r\n}\r\n\r\nconst scoresReducer = (scores, action) => {\r\n  if (action.type === 'add') {\r\n    scores.push(action.score)\r\n  }\r\n  return scores\r\n}\r\n\r\nconst App = () => {\r\n  storage.init(dummyScores, dummyUsers)\r\n\r\n  const authId = storage.getAuthId()\r\n  const [authUser, authDispatch] = useReducer(authReducer, storage.getUser(authId))\r\n\r\n  const [scores, scoreDispatch] = useReducer(scoresReducer, storage.getScores())\r\n\r\n  const [page, setPage] = useState(0)\r\n  const switchPage = (_, newPage) => setPage(newPage)\r\n\r\n  const loginHandler = (userName) => {\r\n    // Users are indexed using their username\r\n    const userId = userName.toLowerCase()\r\n    let user = storage.getUser(userId)\r\n    let scores = storage.getScoresByUser(userId)\r\n    // Quickly handle signup\r\n    if (!user) {\r\n      user = storage.addUser(userId, userName)\r\n    }\r\n    user.scores = scores\r\n    authDispatch({ type: 'login', user})\r\n  }\r\n\r\n  return (\r\n    <FullscreenWrapper>\r\n      <AppBar position=\"static\">\r\n        <Header>\r\n          <Title variant=\"h6\">LyriXmatch</Title>\r\n        </Header>\r\n      </AppBar>\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/game\">\r\n            <Page>\r\n              { authUser ? \r\n                  <Game />\r\n                :\r\n                  <Profile\r\n                    user={authUser}\r\n                    login={loginHandler}\r\n                    logout={() => authDispatch({ type: 'logout'})} />\r\n              }\r\n            </Page>\r\n          </Route>\r\n          <Route path=\"/leaderboard\">\r\n            <Page>\r\n              <Loaderboard scores={scores} />\r\n            </Page>\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Page>\r\n              <Profile\r\n                user={authUser}\r\n                login={loginHandler}\r\n                logout={() => authDispatch({ type: 'logout'})} />\r\n            </Page>\r\n          </Route>\r\n        </Switch>\r\n        <Navigation\r\n          value={page}\r\n          onChange={switchPage}\r\n          showLabels\r\n        >\r\n          <Tab label=\"LEADERBOARD\" icon={<FormatListNumberedIcon />} to=\"/leaderboard\" />\r\n          <Tab label=\"PLAY\" icon={<SportsEsportsSharpIcon />} to=\"/game\" />\r\n          <Tab label=\"PROFILE\" icon={<PersonIcon />} to=\"/\" />\r\n        </Navigation>\r\n      </Router>\r\n    </FullscreenWrapper>\r\n  )\r\n}\r\n\r\nconst Tab = (props) => <BottomNavigationAction component={Link} {...props} />\r\n\r\nconst FullscreenWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\nconst Navigation = styled(BottomNavigation)`\r\n  bottom: 0;\r\n`\r\nconst Page = styled.div`\r\n  background-color: #999;\r\n  height: 100%;\r\n`\r\nconst Header = styled(Toolbar)`\r\n  background-color: white;\r\n  color: #666;\r\n`\r\nconst Title = styled(Typography)`\r\n  width: 100%;\r\n  text-align: center;\r\n`\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}